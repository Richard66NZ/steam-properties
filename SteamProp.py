# -*- coding: utf-8 -*-
"""
@date: 12 December 2020

This source code is provided by Richard J Smith 'as is' and 'with all faults'. The provider makes no 
representations or warranties of any kind concerning the safety, suitability, inaccuracies, 
typographical errors, or other harmful components of this software.
"""

import sys
from PyQt5 import QtCore, QtGui, QtWidgets, uic
from pyXSteam.XSteam import XSteam
import numpy as np
import sys

steamTable = XSteam(XSteam.UNIT_SYSTEM_MKS)

qtcreator_file = "SteamProps.ui"
Ui_MainWindow, QtBaseClass = uic.loadUiType(qtcreator_file)

class MyWindow(QtWidgets.QMainWindow, Ui_MainWindow):
    def __init__(self):
        QtWidgets.QMainWindow.__init__(self)
        Ui_MainWindow.__init__(self)
        self.setupUi(self)

        self.quitButton.clicked.connect(self.on_Quitclick)
        self.calcButton.clicked.connect(self.on_Calcclick)
        self.setWindowTitle("Steam Properties")
        self.comboBox.addItems(["P (liquid)","Px","P (gas)","T (liquid)","Tx","T (gas)","PT","PH","PS","HS"])
        self.comboBox.currentIndexChanged.connect(self.CBselectionchange)
        self.comboBox.setCurrentText('Px')
        self.comboBox.setCurrentText('P (liquid)')
        self.redlabel6.setVisible(False)
        self.redlabel7.setVisible(False)
        self.redlabel8.setVisible(False)
        self.redlabel9.setVisible(False)
                        
    def on_Quitclick(self): #Quit button has been pressed         
        self.close()

    def show_results(self, p, t, h, s, x, v, rho, u, w):
        self.lineEdit1.setText(str(round(float(p),2)))
        self.lineEdit2.setText(str(round(float(t),2)))
        self.lineEdit3.setText(str(round(float(h),2)))
        self.lineEdit4.setText(str(round(float(s),4)))
        self.lineEdit5.setText(str(round(float(x),3)))
        self.lineEdit6.setText(str(round(float(v),5)))
        self.lineEdit7.setText(str(round(float(rho),2)))
        self.lineEdit8.setText(str(round(float(u),2)))
        self.lineEdit9.setText(str(round(float(w),2)))

    def on_Calcclick(self): #Calculate button has been pressed         
        if self.comboBox.currentText() == 'P (liquid)':
            p1 = float(self.lineEdit1.text())           
            t1 = steamTable.tsat_p(p1)
            h1 = steamTable.hL_p(p1)
            v1 = steamTable.vL_p(p1)
            s1 = steamTable.sL_p(p1)
            x1 = steamTable.x_ps(p1, s1)
            rho1 = steamTable.rhoL_p(p1)
            u1 = steamTable.uL_p(p1)
            w1 = steamTable.wL_p(p1)         
            self.show_results(p1, t1, h1, s1, x1, v1, rho1, u1, w1)
            print(f"p: {round(float(p1),1)} bar")   
            print(f"T: {round(float(t1),1)} degC") 
            print(f"H: {round(float(h1),1)} kJ/kg") 
            print(f"S: {round(float(s1),3)} kJ/kg K")   
            print(f"x: {round(float(x1),1)} ")  
            print(f"V: {round(float(v1),5)} m3/kg")   
            print(f"rho: {round(float(rho1),1)} kg/m3")   
            print(f"U: {round(float(u1),1)} kJ/kg")   
            print(f"W: {round(float(w1),1)} m/s")    
            self.redraw()
            
        elif self.comboBox.currentText() == 'Px':           
            p1 = float(self.lineEdit1.text()) 
            x1 = float(self.lineEdit5.text()) 
            t1 = steamTable.tsat_p(p1)
            h1 = steamTable.h_px(p1, x1)
            v1 = steamTable.v_ph(p1, h1)
            s1 = steamTable.s_ph(p1, h1)
            x1 = steamTable.x_ps(p1, s1)
            rho1 = steamTable.rho_ph(p1, h1)
            u1 = steamTable.u_ph(p1, h1)
            w1 = steamTable.w_ph(p1, h1)
            self.show_results(p1, t1, h1, s1, x1, v1, rho1, u1, w1)
            print(f"p: {round(float(p1),1)} bar")   
            print(f"T: {round(float(t1),1)} degC") 
            print(f"H: {round(float(h1),1)} kJ/kg") 
            print(f"S: {round(float(s1),3)} kJ/kg K")   
            print(f"x: {round(float(x1),1)} ")  
            print(f"V: {round(float(v1),5)} m3/kg")   
            print(f"rho: {round(float(rho1),1)} kg/m3")   
            print(f"U: {round(float(u1),1)} kJ/kg")   
            print(f"W: {round(float(w1),1)} m/s")  
            self.redraw()

        elif self.comboBox.currentText() == 'P (gas)':  
            p1 = float(self.lineEdit1.text()) 
            t1 = steamTable.tsat_p(p1)
            h1 = steamTable.hV_p(p1)
            v1 = steamTable.vV_p(p1)
            s1 = steamTable.sV_p(p1)
            rho1 = steamTable.rhoV_p(p1)            
            x1 = steamTable.x_ps(p1, s1)
            u1 = steamTable.uV_p(p1)
            w1 = steamTable.wV_p(p1)                     
            self.show_results(p1, t1, h1, s1, x1, v1, rho1, u1, w1)
            print(f"p: {round(float(p1),1)} bar")   
            print(f"T: {round(float(t1),1)} degC") 
            print(f"H: {round(float(h1),1)} kJ/kg") 
            print(f"S: {round(float(s1),3)} kJ/kg K")   
            print(f"x: {round(float(x1),1)} ")  
            print(f"V: {round(float(v1),5)} m3/kg")   
            print(f"rho: {round(float(rho1),1)} kg/m3")   
            print(f"U: {round(float(u1),1)} kJ/kg")   
            print(f"W: {round(float(w1),1)} m/s")  
            self.redraw()            
            
        elif self.comboBox.currentText() == 'T (liquid)':  
            t1 = float(self.lineEdit2.text()) 
            p1 = steamTable.psat_t(t1)
            h1 = steamTable.hL_t(t1)
            v1 = steamTable.vL_t(t1)
            s1 = steamTable.sL_t(t1)
            x1 = steamTable.x_ps(p1, s1)
            rho1 = steamTable.rhoL_t(t1)
            u1 = steamTable.uL_t(t1)
            w1 = steamTable.wL_t(t1)
            self.show_results(p1, t1, h1, s1, x1, v1, rho1, u1, w1)
            print(f"p: {round(float(p1),1)} bar")   
            print(f"T: {round(float(t1),1)} degC") 
            print(f"H: {round(float(h1),1)} kJ/kg") 
            print(f"S: {round(float(s1),3)} kJ/kg K")   
            print(f"x: {round(float(x1),1)} ")  
            print(f"V: {round(float(v1),5)} m3/kg")   
            print(f"rho: {round(float(rho1),1)} kg/m3")   
            print(f"U: {round(float(u1),1)} kJ/kg")   
            print(f"W: {round(float(w1),1)} m/s")    
            self.redraw()   

        elif self.comboBox.currentText() == 'Tx':  
            t1 = float(self.lineEdit2.text()) 
            x1 = float(self.lineEdit5.text()) 
            p1 = steamTable.psat_t(t1)
            h1 = steamTable.h_tx(t1, x1)
            v1 = steamTable.v_ph(p1, h1)
            s1 = steamTable.s_ph(p1, h1)
            x1 = steamTable.x_ps(p1, s1)
            rho1 = steamTable.rho_ps(p1, s1)
            u1 = steamTable.u_ps(p1, s1)
            w1 = steamTable.w_ps(p1, s1)
            self.show_results(p1, t1, h1, s1, x1, v1, rho1, u1, w1)
            print(f"p: {round(float(p1),1)} bar")   
            print(f"T: {round(float(t1),1)} degC") 
            print(f"H: {round(float(h1),1)} kJ/kg") 
            print(f"S: {round(float(s1),3)} kJ/kg K")   
            print(f"x: {round(float(x1),1)} ")  
            print(f"V: {round(float(v1),5)} m3/kg")   
            print(f"rho: {round(float(rho1),1)} kg/m3")   
            print(f"U: {round(float(u1),1)} kJ/kg")   
            print(f"W: {round(float(w1),1)} m/s")    
            self.redraw()   

        elif self.comboBox.currentText() == 'T (gas)':  
            t1 = float(self.lineEdit2.text()) 
            p1 = steamTable.psat_t(t1)
            h1 = steamTable.hV_t(t1)
            v1 = steamTable.vV_t(t1)
            s1 = steamTable.sV_t(t1)
            x1 = steamTable.x_ps(p1, s1)
            rho1 = steamTable.rhoV_t(t1)
            u1 = steamTable.uV_t(t1)
            w1 = steamTable.wV_t(t1)
            
            self.show_results(p1, t1, h1, s1, x1, v1, rho1, u1, w1)
            print(f"p: {round(float(p1),1)} bar")   
            print(f"T: {round(float(t1),1)} degC") 
            print(f"H: {round(float(h1),1)} kJ/kg") 
            print(f"S: {round(float(s1),3)} kJ/kg K")   
            print(f"V: {round(float(v1),5)} XXX check units")  
            self.redraw()   

        elif self.comboBox.currentText() == 'PT':  
            p1 = float(self.lineEdit1.text()) 
            t1 = float(self.lineEdit2.text()) 
            h1 = steamTable.h_pt(p1, t1)            
            s1 = steamTable.s_pt(p1, t1)   
            v1 = steamTable.v_pt(p1, t1)
            x1 = steamTable.x_ps(p1, s1)
            rho1 = steamTable.rho_pt(p1, t1)
            u1 = steamTable.u_pt(p1, t1)
            w1 = steamTable.w_pt(p1, t1)
            self.show_results(p1, t1, h1, s1, x1, v1, rho1, u1, w1)
            print(f"p: {round(float(p1),1)} bar")   
            print(f"T: {round(float(t1),1)} degC") 
            print(f"H: {round(float(h1),1)} kJ/kg") 
            print(f"S: {round(float(s1),3)} kJ/kg K")   
            print(f"x: {round(float(x1),1)} ")  
            print(f"V: {round(float(v1),5)} m3/kg")   
            print(f"rho: {round(float(rho1),1)} kg/m3")   
            print(f"U: {round(float(u1),1)} kJ/kg")   
            print(f"W: {round(float(w1),1)} m/s")    
            self.redraw()   

        elif self.comboBox.currentText() == 'PH':  
            p1 = float(self.lineEdit1.text()) 
            h1 = float(self.lineEdit3.text()) 
            t1 = steamTable.t_ph(p1, h1) 
            s1 = steamTable.s_ph(p1, h1)   
            v1 = steamTable.v_ph(p1, h1)
            x1 = steamTable.x_ph(p1, h1)
            rho1 = steamTable.rho_ph(p1, h1)
            u1 = steamTable.u_ph(p1, h1)
            w1 = steamTable.w_pt(p1, t1)
            self.show_results(p1, t1, h1, s1, x1, v1, rho1, u1, w1)
            print(f"p: {round(float(p1),1)} bar")   
            print(f"T: {round(float(t1),1)} degC") 
            print(f"H: {round(float(h1),1)} kJ/kg") 
            print(f"S: {round(float(s1),3)} kJ/kg K")   
            print(f"x: {round(float(x1),1)} ")  
            print(f"V: {round(float(v1),5)} m3/kg")   
            print(f"rho: {round(float(rho1),1)} kg/m3")   
            print(f"U: {round(float(u1),1)} kJ/kg")   
            print(f"W: {round(float(w1),1)} m/s")    
            self.redraw()   

        elif self.comboBox.currentText() == 'PS':  
            p1 = float(self.lineEdit1.text()) 
            s1 = float(self.lineEdit4.text()) 
            h1 = steamTable.h_ps(p1, s1)                  
            t1 = steamTable.t_ps(p1, s1)
            v1 = steamTable.v_ps(p1, s1)
            x1 = steamTable.x_ps(p1, s1)     
            rho1 = steamTable.rho_ps(p1, s1)
            u1 = steamTable.u_ps(p1, s1)
            w1 = steamTable.w_pt(p1, t1)
            self.show_results(p1, t1, h1, s1, x1, v1, rho1, u1, w1)
            print(f"p: {round(float(p1),1)} bar")   
            print(f"T: {round(float(t1),1)} degC") 
            print(f"H: {round(float(h1),1)} kJ/kg") 
            print(f"S: {round(float(s1),3)} kJ/kg K")         
            print(f"x: {round(float(x1),1)} ")  
            print(f"V: {round(float(v1),5)} m3/kg")   
            print(f"rho: {round(float(rho1),1)} kg/m3")   
            print(f"U: {round(float(u1),1)} kJ/kg")   
            print(f"W: {round(float(w1),1)} m/s")     
            self.redraw()   

        elif self.comboBox.currentText() == 'HS':  
            h1 = float(self.lineEdit3.text()) 
            s1 = float(self.lineEdit4.text()) 
            p1 = steamTable.p_hs(h1, s1)
            t1 = steamTable.t_hs(h1, s1)
            v1 = steamTable.v_ps(p1, s1)
            x1 = steamTable.x_ps(p1, s1)    
            rho1 = steamTable.rho_ps(p1, s1)        
            u1 = steamTable.u_ps(p1, s1)   
            w1 = steamTable.w_pt(p1, t1) 
            self.show_results(p1, t1, h1, s1, x1, v1, rho1, u1, w1)
            print(f"p: {round(float(p1),1)} bar")   
            print(f"T: {round(float(t1),1)} degC") 
            print(f"H: {round(float(h1),1)} kJ/kg") 
            print(f"S: {round(float(s1),3)} kJ/kg K")         
            print(f"x: {round(float(x1),1)} ")  
            print(f"V: {round(float(v1),5)} m3/kg")   
            print(f"rho: {round(float(rho1),1)} kg/m3")   
            print(f"U: {round(float(u1),1)} kJ/kg")   
            print(f"W: {round(float(w1),1)} m/s")     
            self.redraw()               

    def CBselectionchange(self,i):
       if self.comboBox.currentText() == 'P (liquid)':
           self.lineEdit1.setReadOnly(False)
           self.lineEdit2.setReadOnly(True)
           self.lineEdit3.setReadOnly(True)
           self.lineEdit4.setReadOnly(True)
           self.lineEdit5.setReadOnly(True)           
           self.redlabel1.setVisible(True)
           self.redlabel2.setVisible(False)           
           self.redlabel3.setVisible(False)           
           self.redlabel4.setVisible(False)           
           self.redlabel5.setVisible(False)

       elif self.comboBox.currentText() == 'Px':  
           self.lineEdit1.setReadOnly(False)
           self.lineEdit2.setReadOnly(True)
           self.lineEdit3.setReadOnly(True)
           self.lineEdit4.setReadOnly(True)
           self.lineEdit5.setReadOnly(False)
           self.redlabel1.setVisible(True)
           self.redlabel2.setVisible(False)           
           self.redlabel3.setVisible(False)           
           self.redlabel4.setVisible(False)           
           self.redlabel5.setVisible(True)

       elif self.comboBox.currentText() == 'P (gas)':
           self.lineEdit1.setReadOnly(False)
           self.lineEdit2.setReadOnly(True)
           self.lineEdit3.setReadOnly(True)
           self.lineEdit4.setReadOnly(True)
           self.lineEdit5.setReadOnly(True)
           self.redlabel1.setVisible(True)
           self.redlabel2.setVisible(False)           
           self.redlabel3.setVisible(False)           
           self.redlabel4.setVisible(False)           
           self.redlabel5.setVisible(False)
              
       elif self.comboBox.currentText() == 'T (liquid)':             
           self.lineEdit1.setReadOnly(True)
           self.lineEdit2.setReadOnly(False)
           self.lineEdit3.setReadOnly(True)
           self.lineEdit4.setReadOnly(True)
           self.lineEdit5.setReadOnly(True)           
           self.redlabel1.setVisible(False)
           self.redlabel2.setVisible(True)           
           self.redlabel3.setVisible(False)           
           self.redlabel4.setVisible(False)           
           self.redlabel5.setVisible(False)
           
       elif self.comboBox.currentText() == 'Tx':              
           self.lineEdit1.setReadOnly(True)
           self.lineEdit2.setReadOnly(False)
           self.lineEdit3.setReadOnly(True)
           self.lineEdit4.setReadOnly(True)
           self.lineEdit5.setReadOnly(False)    
           self.redlabel1.setVisible(False)
           self.redlabel2.setVisible(True)           
           self.redlabel3.setVisible(False)           
           self.redlabel4.setVisible(False)           
           self.redlabel5.setVisible(True)

       elif self.comboBox.currentText() == 'T (gas)':
           self.lineEdit1.setReadOnly(True)
           self.lineEdit2.setReadOnly(False)
           self.lineEdit3.setReadOnly(True)
           self.lineEdit4.setReadOnly(True)
           self.lineEdit5.setReadOnly(True)  
           self.redlabel1.setVisible(False)
           self.redlabel2.setVisible(True)           
           self.redlabel3.setVisible(False)           
           self.redlabel4.setVisible(False)           
           self.redlabel5.setVisible(False)
           
       elif self.comboBox.currentText() == 'PT':
           self.lineEdit1.setReadOnly(False)
           self.lineEdit2.setReadOnly(False)
           self.lineEdit3.setReadOnly(True)
           self.lineEdit4.setReadOnly(True)
           self.lineEdit5.setReadOnly(True)             
           self.redlabel1.setVisible(True)
           self.redlabel2.setVisible(True)           
           self.redlabel3.setVisible(False)           
           self.redlabel4.setVisible(False)           
           self.redlabel5.setVisible(False)
           
       elif self.comboBox.currentText() == 'PH':
           self.lineEdit1.setReadOnly(False)
           self.lineEdit2.setReadOnly(True)
           self.lineEdit3.setReadOnly(False)
           self.lineEdit4.setReadOnly(True)
           self.lineEdit5.setReadOnly(True)  
           self.redlabel1.setVisible(True)
           self.redlabel2.setVisible(False)           
           self.redlabel3.setVisible(True)           
           self.redlabel4.setVisible(False)           
           self.redlabel5.setVisible(False)
           
       elif self.comboBox.currentText() == 'PS':
           self.lineEdit1.setReadOnly(False)
           self.lineEdit2.setReadOnly(True)
           self.lineEdit3.setReadOnly(True)
           self.lineEdit4.setReadOnly(False)
           self.lineEdit5.setReadOnly(True)  
           self.redlabel1.setVisible(True)
           self.redlabel2.setVisible(False)           
           self.redlabel3.setVisible(False)           
           self.redlabel4.setVisible(True)           
           self.redlabel5.setVisible(False)
           
       elif self.comboBox.currentText() == 'HS':
           self.lineEdit1.setReadOnly(True)
           self.lineEdit2.setReadOnly(True)
           self.lineEdit3.setReadOnly(False)
           self.lineEdit4.setReadOnly(False)
           self.lineEdit5.setReadOnly(True)  
           self.redlabel1.setVisible(False)
           self.redlabel2.setVisible(False)           
           self.redlabel3.setVisible(True)           
           self.redlabel4.setVisible(True)           
           self.redlabel5.setVisible(False)           

    def redraw(self):
        app.processEvents()
        self.lineEdit1.update()
        self.lineEdit2.update()
        self.lineEdit3.update()
        self.lineEdit4.update()
        self.lineEdit5.update()
        self.lineEdit6.update()
        self.lineEdit7.update()
        self.lineEdit8.update()
        self.lineEdit9.update()
        
if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    window = MyWindow()
    window.show()
    sys.exit(app.exec_())